@echo off
REM Script de verifica√ß√£o p√≥s-instala√ß√£o do t√∫nel Cursor-Codespace (Windows)

echo üîç Verifica√ß√£o P√≥s-Instala√ß√£o - Cursor-Codespace T√∫nel
echo =======================================================
echo.

set INSTALL_DIR=%USERPROFILE%\cursor-codespace-bridge
set CURSOR_EXT_DIR=%USERPROFILE%\.cursor\extensions\codespace-tunnel
set CODESPACE_URL=https://super-trout-5gpv6wrgxgq53p6r9-8000.app.github.dev

set PREREQ_OK=true
set BRIDGE_OK=true
set EXTENSION_OK=true
set CONNECTIVITY_OK=true

REM Verificar pr√©-requisitos
echo üìã Verificando pr√©-requisitos...

REM Verificar Node.js
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Node.js - N√ÉO ENCONTRADO
    set PREREQ_OK=false
) else (
    for /f %%i in ('node --version') do echo ‚úÖ Node.js: %%i
)

REM Verificar NPM
npm --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå NPM - N√ÉO ENCONTRADO
    set PREREQ_OK=false
) else (
    for /f %%i in ('npm --version') do echo ‚úÖ NPM: %%i
)

REM Verificar cURL
curl --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå cURL - N√ÉO ENCONTRADO
    set PREREQ_OK=false
) else (
    for /f "tokens=2" %%i in ('curl --version ^| findstr curl') do echo ‚úÖ cURL: %%i
)

echo.

REM Verificar instala√ß√£o do bridge
echo üì¶ Verificando instala√ß√£o do bridge...

if not exist "%INSTALL_DIR%" (
    echo ‚ùå Diret√≥rio de instala√ß√£o - FALTANDO: %INSTALL_DIR%
    set BRIDGE_OK=false
) else (
    echo ‚úÖ Diret√≥rio de instala√ß√£o
)

if not exist "%INSTALL_DIR%\cursor_bridge.js" (
    echo ‚ùå Bridge principal - FALTANDO: cursor_bridge.js
    set BRIDGE_OK=false
) else (
    echo ‚úÖ Bridge principal
)

if not exist "%INSTALL_DIR%\start_bridge.bat" (
    echo ‚ùå Script de inicializa√ß√£o - FALTANDO: start_bridge.bat
    set BRIDGE_OK=false
) else (
    echo ‚úÖ Script de inicializa√ß√£o
)

if not exist "%INSTALL_DIR%\codespace.bat" (
    echo ‚ùå Script de comando - FALTANDO: codespace.bat
    set BRIDGE_OK=false
) else (
    echo ‚úÖ Script de comando
)

echo.

REM Verificar extens√£o Cursor
echo üîå Verificando extens√£o Cursor...

if not exist "%CURSOR_EXT_DIR%" (
    echo ‚ùå Diret√≥rio da extens√£o - FALTANDO: %CURSOR_EXT_DIR%
    set EXTENSION_OK=false
) else (
    echo ‚úÖ Diret√≥rio da extens√£o
)

if not exist "%CURSOR_EXT_DIR%\package.json" (
    echo ‚ùå Manifesto da extens√£o - FALTANDO: package.json
    set EXTENSION_OK=false
) else (
    echo ‚úÖ Manifesto da extens√£o
)

if not exist "%CURSOR_EXT_DIR%\extension.js" (
    echo ‚ùå C√≥digo da extens√£o - FALTANDO: extension.js
    set EXTENSION_OK=false
) else (
    echo ‚úÖ C√≥digo da extens√£o
)

echo.

REM Testar conectividade
echo üåê Testando conectividade...
curl -s -I "%CODESPACE_URL%" | find "200" >nul
if %errorlevel% equ 0 (
    echo ‚úÖ Codespace acess√≠vel: %CODESPACE_URL%
) else (
    echo ‚ùå Codespace n√£o acess√≠vel: %CODESPACE_URL%
    set CONNECTIVITY_OK=false
)

echo.

REM Testar bridge local
echo üîó Testando bridge local...
netstat -an | findstr :3001 >nul
if %errorlevel% equ 0 (
    echo ‚úÖ Bridge rodando na porta 3001
) else (
    echo ‚ö†Ô∏è Bridge n√£o est√° rodando na porta 3001
)

echo.

REM Teste funcional b√°sico
echo üß™ Teste funcional b√°sico...
if "%BRIDGE_OK%"=="true" if "%CONNECTIVITY_OK%"=="true" (
    echo üöÄ Executando teste remoto...
    "%INSTALL_DIR%\codespace.bat" run "python -c \"print('‚úÖ Teste OK!')\"" 2>nul | find "‚úÖ Teste OK!" >nul
    if %errorlevel% equ 0 (
        echo ‚úÖ Teste funcional passou!
    ) else (
        echo ‚ùå Teste funcional falhou
    )
) else (
    echo ‚ö†Ô∏è Pulando teste funcional (pr√©-requisitos n√£o atendidos)
)

echo.

REM Resumo final
echo üìä RESUMO DA VERIFICA√á√ÉO
echo ========================
echo.

if "%PREREQ_OK%"=="true" (
    echo ‚úÖ Pr√©-requisitos: OK
) else (
    echo ‚ùå Pr√©-requisitos: FALHA
)

if "%BRIDGE_OK%"=="true" (
    echo ‚úÖ Bridge instalado: OK
) else (
    echo ‚ùå Bridge instalado: FALHA
)

if "%EXTENSION_OK%"=="true" (
    echo ‚úÖ Extens√£o Cursor: OK
) else (
    echo ‚ùå Extens√£o Cursor: FALHA
)

if "%CONNECTIVITY_OK%"=="true" (
    echo ‚úÖ Conectividade: OK
) else (
    echo ‚ùå Conectividade: FALHA
)

echo.

REM Instru√ß√µes finais
if "%PREREQ_OK%"=="true" if "%BRIDGE_OK%"=="true" if "%EXTENSION_OK%"=="true" if "%CONNECTIVITY_OK%"=="true" (
    echo üéâ INSTALA√á√ÉO COMPLETA E FUNCIONAL!
    echo.
    echo üöÄ Pr√≥ximos passos:
    echo 1. Iniciar bridge:
    echo    %INSTALL_DIR%\start_bridge.bat
    echo.
    echo 2. Abrir Cursor e usar:
    echo    - Ctrl+Shift+R: Executar comando remoto
    echo    - Ctrl+Shift+S: Sincronizar arquivo
    echo.
    echo 3. Teste via terminal:
    echo    %INSTALL_DIR%\codespace.bat run "python -c \"print('Hello from Codespace!')\""
    echo.
    echo üìö Documenta√ß√£o completa: CURSOR_SETUP.md
) else (
    echo ‚ö†Ô∏è INSTALA√á√ÉO INCOMPLETA
    echo.
    echo üîß A√ß√µes necess√°rias:
    
    if "%PREREQ_OK%"=="false" (
        echo - Instalar pr√©-requisitos (Node.js, npm, curl)
    )
    
    if "%BRIDGE_OK%"=="false" (
        echo - Reinstalar bridge (executar script de instala√ß√£o)
    )
    
    if "%EXTENSION_OK%"=="false" (
        echo - Reinstalar extens√£o Cursor
    )
    
    if "%CONNECTIVITY_OK%"=="false" (
        echo - Verificar se o servidor Codespace est√° rodando
        echo - Executar: python dev_server.py no Codespace
    )
    
    echo.
    echo üí° Execute o script de instala√ß√£o novamente ou consulte CURSOR_SETUP.md
)

echo.
pause
